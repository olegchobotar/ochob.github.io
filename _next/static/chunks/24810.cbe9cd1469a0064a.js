"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[24810],{24810:(t,a,e)=>{e.d(a,{relayBiconomyTransaction:()=>l});var n=e(46304),o=e(92223),s=e(32068),r=e(42499),i=e(73503),c=e(94271),d=e(53047);async function h({account:t,serializableTransaction:a,transaction:e,gasless:r}){let c=(0,s.getContract)({address:r.relayerForwarderAddress,chain:e.chain,client:e.client}),h=await (0,d.readContract)({contract:c,method:"function getNonce(address,uint256) view returns (uint256)",params:[t.address,0n]}),l=Math.floor(Date.now()/1e3)+(r.deadlineSeconds??3600),p={from:t.address,to:a.to,token:o.cF,txGas:a.gas,tokenGasPrice:0n,batchId:0n,batchNonce:h,deadline:l,data:a.data};if(!p.to)throw Error("Cannot send a transaction without a `to` address");if(!p.txGas)throw Error("Cannot send a transaction without a `gas` value");if(!p.data)throw Error("Cannot send a transaction without a `data` value");let u=(0,n.h)([{type:"address"},{type:"address"},{type:"address"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"uint256"},{type:"bytes32"}],[p.from,p.to,p.token,p.txGas,p.tokenGasPrice,p.batchId,p.batchNonce,(0,i.S)(p.data)]);return[p,await t.signMessage({message:u})]}async function l(t){let[a,e]=await h(t),n=await fetch("https://api.biconomy.io/api/v2/meta-tx/native",{method:"POST",body:(0,c.A)({apiId:t.gasless.apiId,params:[a,e],from:a.from,to:a.to,gasLimit:a.txGas}),headers:{"x-api-key":t.gasless.apiKey,"Content-Type":"application/json;charset=utf-8"}});if(!n.ok)throw n.body?.cancel(),Error(`Failed to send transaction: ${await n.text()}`);let o=await n.json(),s=o.txHash;if((0,r.q)(s))return{transactionHash:s,chain:t.transaction.chain,client:t.transaction.client};throw Error(`Failed to send transaction: ${(0,c.A)(o)}`)}}}]);