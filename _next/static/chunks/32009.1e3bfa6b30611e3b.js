"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[32009],{32009:(e,t,r)=>{r.d(t,{upload:()=>u});var i=r(28126),n=r(94271),a=r(81586),f=r(71165);function l(e){return globalThis.File&&e instanceof File}function s(e){return!!(e&&(0,a.C)(e,["data","name"]))&&!!("string"==typeof e.name&&("string"==typeof e.data||(0,f.mg)(e.data)))}function o(e){return l(e)||(0,f.mg)(e)||s(e)}async function u(e){let t;if(0===e.files.length)return null;if(e.files.map(e=>o(e)||"string"==typeof e).every(e=>!!e))t=e.files;else{let r=e.files,i=function e(t,r=[]){if(o(t))return r.push(t),r;if("object"==typeof t){if(!t)return r;if(Array.isArray(t))for(let i of t)e(i,r);else Object.keys(t).map(i=>e(t[i],r))}return r}(r=function e(t){return"string"==typeof t?function(e){if(e.includes("/ipfs/")){let t=e.split("/ipfs/")[1];return`ipfs://${t}`}return e}(t):"object"==typeof t?!t||o(t)?t:Array.isArray(t)?t.map(t=>e(t)):Object.fromEntries(Object.entries(t).map(([t,r])=>[t,e(r)])):t}(r));if(i.length){let t=await u({...e,files:i});r=function e(t,r){if(o(t)){if(r.length)return r.shift();console.warn("Not enough URIs to replace all files in object.")}return"object"==typeof t&&t?Array.isArray(t)?t.map(t=>e(t,r)):Object.fromEntries(Object.entries(t).map(([t,i])=>[t,e(i,r)])):t}(r,Array.isArray(t)?t:[t])}t=r.map(e=>"string"==typeof e?e:(0,n.A)(e))}let{fileNames:a,form:p}=function(e,t,r){let i=new Map,n=[];for(let a=0;a<t.length;a++){let o=t[a],u="",p=o;if(l(o)){if(r?.rewriteFileNames){let e="";if(o.name){let t=o.name.lastIndexOf(".");t>-1&&(e=o.name.substring(t))}u=`${a+r.rewriteFileNames.fileStartNumber}${e}`}else u=`${o.name}`}else s(o)?(p=o.data,u=r?.rewriteFileNames?`${a+r.rewriteFileNames.fileStartNumber}`:`${o.name}`):u=r?.rewriteFileNames?`${a+r.rewriteFileNames.fileStartNumber}`:`${a}`;let m=r?.uploadWithoutDirectory?"files":`files/${u}`;if(i.has(u)){if(function(e,t){if(l(e)&&l(t)){if(e.name===t.name&&e.lastModified===t.lastModified&&e.size===t.size)return!0}else if((0,f.mg)(e)&&(0,f.mg)(t))return(0,f.tv)(e,t);else if(s(e)&&s(t)&&e.name===t.name){if("string"==typeof e.data&&"string"==typeof t.data)return e.data===t.data;if((0,f.mg)(e.data)&&(0,f.mg)(t.data))return(0,f.tv)(e.data,t.data)}return!1}(i.get(u),o)){n.push(u);continue}throw Error(`[DUPLICATE_FILE_NAME_ERROR] File name ${u} was passed for more than one different file.`)}i.set(u,o),n.push(u),e.append("file",new Blob([p]),m)}let a={name:"Storage SDK",keyvalues:{...r?.metadata}};return e.append("pinataMetadata",JSON.stringify(a)),r?.uploadWithoutDirectory&&e.append("pinataOptions",JSON.stringify({wrapWithDirectory:!1})),{form:e,fileNames:n.map(e=>encodeURIComponent(e))}}(new FormData,t,e),m=(0,i.l)();if("browser"===m||"node"===m){let{uploadBatch:t}=await r.e(47020).then(r.bind(r,47020)),i=await t(e.client,p,a,e);return 1===e.files.length?i[0]:i}throw Error("Please, use the uploadMobile function in mobile environments.")}},81586:(e,t,r)=>{r.d(t,{C:()=>i});function i(e,t=[]){return"object"==typeof e&&null!==e&&t.every(t=>t in e)}}}]);